#include <bits/stdc++.h>
using namespace std;
#define N 100000
int INF = 1000000000;
int cnt[201][N + 1];
int c[N + 1];
int sums[N + 1];
int nums[N + 1];
int main() {
	int n, i, j, temp, currCount, neededCount;
	int currEfort, minEfort = INF;
	cin >> n;
	for (i = 0; i < n; i++)
		cin >> nums[i];
	for (i = 0; i < n; i++) {
		cin >> temp;
		sums[nums[i]] += temp;
		c[nums[i]]++;
		cnt[temp][nums[i]]++;
	}
	for (i = 1; i <= N; i++) {
		sums[i] += sums[i - 1];
		c[i] += c[i - 1];
	}
	for (i = 1; i <= 200; i++)
		for (j = 1; j <= N; j++)
			cnt[i][j] += cnt[i][j - 1];

	for (int k = 0; k < n; k++) {
		i = nums[k];
		currEfort = sums[N] - sums[i];
		currCount = c[i] - c[i - 1];
		neededCount = (n - (currCount * 2 - 1));
		neededCount -= c[N] - c[i];
		j = 1;
		if (neededCount > 0)
			while (j < 201) {
				if (neededCount <= cnt[j][i - 1]) {
					currEfort += neededCount * j;
					neededCount = 0;
					break;
				} else {
					neededCount -= cnt[j][i - 1];
					currEfort += cnt[j][i - 1] * j;
				}
				j++;
			}
		if (neededCount <= 0)
			minEfort = min(minEfort, currEfort);
	}

	cout << minEfort << endl;
	return 0;

}
